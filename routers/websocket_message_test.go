package routers

import (
	"math/rand"
	"net/http/httptest"
	"strings"
	"testing"
	"time"

	"github.com/gorilla/websocket"
)

func init() {
	//seed for the generated string not predictable
	rand.Seed(time.Now().UnixNano())
}

var letterRunes = []rune("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ")

func TestWebsocketMessage(t *testing.T) {

	//call your router init with SimpleAPI
	api := RegisterHandlers()

	//create test server
	server := httptest.NewServer(api.Server)
	defer server.Close()

	// Convert http://127.0.0.1 to ws://127.0.0.
	u := "ws" + strings.TrimPrefix(server.URL, "http") + "/ws/messages/echo"

	// Connect to the server
	ws, _, err := websocket.DefaultDialer.Dial(u, nil)
	if err != nil {
		t.Fatalf("%v", err)
	}
	defer ws.Close()

	// Send message to server, read response and check to see if it's what we expect.
	for i := 0; i < 10; i++ {
		Msg := RandStringRunes(7)
		if err := ws.WriteMessage(websocket.TextMessage, []byte(Msg)); err != nil {
			t.Fatalf("%v", err)
		}
		_, p, err := ws.ReadMessage()
		if err != nil {
			t.Fatalf("%v", err)
		}
		if string(p) != "Your Message : "+Msg {
			t.Fatalf("bad message")
		}
	}
}

/*RandStringRunes generate random string
* n : length of output string that generated by this function
* thankgs to https://stackoverflow.com/questions/22892120/how-to-generate-a-random-string-of-a-fixed-length-in-go
**/
func RandStringRunes(n int) string {
	b := make([]rune, n)
	for i := range b {
		b[i] = letterRunes[rand.Intn(len(letterRunes))]
	}
	return string(b)
}
